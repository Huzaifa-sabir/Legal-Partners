{"ast":null,"code":"// Local Storage utility functions for demo purposes\n// In production, replace with your preferred backend solution\n\nclass LocalStorageDB {\n  constructor() {\n    this.init();\n  }\n  init() {\n    // Initialize with demo data if not exists\n    if (!localStorage.getItem('users')) {\n      const demoUsers = [{\n        id: 'admin-1',\n        uid: 'admin-1',\n        email: 'admin@legalpartners.com',\n        displayName: 'Admin User',\n        role: 'admin',\n        active: true,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      }, {\n        id: 'user-1',\n        uid: 'user-1',\n        email: 'client@example.com',\n        displayName: 'John Client',\n        role: 'user',\n        active: true,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      }];\n      localStorage.setItem('users', JSON.stringify(demoUsers));\n    }\n    if (!localStorage.getItem('policies')) {\n      localStorage.setItem('policies', JSON.stringify([]));\n    }\n    if (!localStorage.getItem('claims')) {\n      localStorage.setItem('claims', JSON.stringify([]));\n    }\n    if (!localStorage.getItem('notifications')) {\n      localStorage.setItem('notifications', JSON.stringify([]));\n    }\n  }\n\n  // Generate unique ID\n  generateId() {\n    return 'id-' + Math.random().toString(36).substr(2, 16);\n  }\n\n  // Generic CRUD operations\n  create(collection, data) {\n    const items = this.getAll(collection);\n    const newItem = {\n      id: this.generateId(),\n      ...data,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n    items.push(newItem);\n    localStorage.setItem(collection, JSON.stringify(items));\n    return newItem;\n  }\n  getAll(collection) {\n    const data = localStorage.getItem(collection);\n    return data ? JSON.parse(data) : [];\n  }\n  getById(collection, id) {\n    const items = this.getAll(collection);\n    return items.find(item => item.id === id);\n  }\n  update(collection, id, data) {\n    const items = this.getAll(collection);\n    const index = items.findIndex(item => item.id === id);\n    if (index !== -1) {\n      items[index] = {\n        ...items[index],\n        ...data,\n        updatedAt: new Date().toISOString()\n      };\n      localStorage.setItem(collection, JSON.stringify(items));\n      return items[index];\n    }\n    return null;\n  }\n  delete(collection, id) {\n    const items = this.getAll(collection);\n    const filteredItems = items.filter(item => item.id !== id);\n    localStorage.setItem(collection, JSON.stringify(filteredItems));\n    return true;\n  }\n\n  // Query operations\n  where(collection, field, operator, value) {\n    const items = this.getAll(collection);\n    return items.filter(item => {\n      switch (operator) {\n        case '==':\n          return item[field] === value;\n        case '!=':\n          return item[field] !== value;\n        case '>':\n          return item[field] > value;\n        case '<':\n          return item[field] < value;\n        case '>=':\n          return item[field] >= value;\n        case '<=':\n          return item[field] <= value;\n        case 'array-contains':\n          return Array.isArray(item[field]) && item[field].includes(value);\n        default:\n          return false;\n      }\n    });\n  }\n\n  // File storage simulation\n  uploadFile(file) {\n    return new Promise(resolve => {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const fileData = {\n          id: this.generateId(),\n          name: file.name,\n          type: file.type,\n          size: file.size,\n          data: e.target.result,\n          // Base64 data\n          uploadedAt: new Date().toISOString()\n        };\n\n        // Store file data\n        const files = JSON.parse(localStorage.getItem('files') || '[]');\n        files.push(fileData);\n        localStorage.setItem('files', JSON.stringify(files));\n        resolve({\n          id: fileData.id,\n          name: fileData.name,\n          url: `data:${file.type};base64,${e.target.result.split(',')[1]}`,\n          type: file.type,\n          size: file.size,\n          uploadedAt: fileData.uploadedAt\n        });\n      };\n      reader.readAsDataURL(file);\n    });\n  }\n\n  // Authentication simulation\n  getCurrentUser() {\n    const userData = localStorage.getItem('currentUser');\n    return userData ? JSON.parse(userData) : null;\n  }\n  setCurrentUser(user) {\n    localStorage.setItem('currentUser', JSON.stringify(user));\n  }\n  clearCurrentUser() {\n    localStorage.removeItem('currentUser');\n  }\n\n  // Password hashing simulation (NOT secure - for demo only)\n  hashPassword(password) {\n    // Simple hash for demo - use proper hashing in production\n    return btoa(password);\n  }\n  verifyPassword(password, hash) {\n    return btoa(password) === hash;\n  }\n}\nexport const db = new LocalStorageDB();\nexport default db;","map":{"version":3,"names":["LocalStorageDB","constructor","init","localStorage","getItem","demoUsers","id","uid","email","displayName","role","active","createdAt","Date","toISOString","updatedAt","setItem","JSON","stringify","generateId","Math","random","toString","substr","create","collection","data","items","getAll","newItem","push","parse","getById","find","item","update","index","findIndex","delete","filteredItems","filter","where","field","operator","value","Array","isArray","includes","uploadFile","file","Promise","resolve","reader","FileReader","onload","e","fileData","name","type","size","target","result","uploadedAt","files","url","split","readAsDataURL","getCurrentUser","userData","setCurrentUser","user","clearCurrentUser","removeItem","hashPassword","password","btoa","verifyPassword","hash","db"],"sources":["D:/Law/law-firm-app/src/services/localStorage.js"],"sourcesContent":["// Local Storage utility functions for demo purposes\r\n// In production, replace with your preferred backend solution\r\n\r\nclass LocalStorageDB {\r\n  constructor() {\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    // Initialize with demo data if not exists\r\n    if (!localStorage.getItem('users')) {\r\n      const demoUsers = [\r\n        {\r\n          id: 'admin-1',\r\n          uid: 'admin-1',\r\n          email: 'admin@legalpartners.com',\r\n          displayName: 'Admin User',\r\n          role: 'admin',\r\n          active: true,\r\n          createdAt: new Date().toISOString(),\r\n          updatedAt: new Date().toISOString()\r\n        },\r\n        {\r\n          id: 'user-1',\r\n          uid: 'user-1',\r\n          email: 'client@example.com',\r\n          displayName: 'John Client',\r\n          role: 'user',\r\n          active: true,\r\n          createdAt: new Date().toISOString(),\r\n          updatedAt: new Date().toISOString()\r\n        }\r\n      ];\r\n      localStorage.setItem('users', JSON.stringify(demoUsers));\r\n    }\r\n\r\n    if (!localStorage.getItem('policies')) {\r\n      localStorage.setItem('policies', JSON.stringify([]));\r\n    }\r\n\r\n    if (!localStorage.getItem('claims')) {\r\n      localStorage.setItem('claims', JSON.stringify([]));\r\n    }\r\n\r\n    if (!localStorage.getItem('notifications')) {\r\n      localStorage.setItem('notifications', JSON.stringify([]));\r\n    }\r\n  }\r\n\r\n  // Generate unique ID\r\n  generateId() {\r\n    return 'id-' + Math.random().toString(36).substr(2, 16);\r\n  }\r\n\r\n  // Generic CRUD operations\r\n  create(collection, data) {\r\n    const items = this.getAll(collection);\r\n    const newItem = {\r\n      id: this.generateId(),\r\n      ...data,\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: new Date().toISOString()\r\n    };\r\n    items.push(newItem);\r\n    localStorage.setItem(collection, JSON.stringify(items));\r\n    return newItem;\r\n  }\r\n\r\n  getAll(collection) {\r\n    const data = localStorage.getItem(collection);\r\n    return data ? JSON.parse(data) : [];\r\n  }\r\n\r\n  getById(collection, id) {\r\n    const items = this.getAll(collection);\r\n    return items.find(item => item.id === id);\r\n  }\r\n\r\n  update(collection, id, data) {\r\n    const items = this.getAll(collection);\r\n    const index = items.findIndex(item => item.id === id);\r\n    if (index !== -1) {\r\n      items[index] = {\r\n        ...items[index],\r\n        ...data,\r\n        updatedAt: new Date().toISOString()\r\n      };\r\n      localStorage.setItem(collection, JSON.stringify(items));\r\n      return items[index];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  delete(collection, id) {\r\n    const items = this.getAll(collection);\r\n    const filteredItems = items.filter(item => item.id !== id);\r\n    localStorage.setItem(collection, JSON.stringify(filteredItems));\r\n    return true;\r\n  }\r\n\r\n  // Query operations\r\n  where(collection, field, operator, value) {\r\n    const items = this.getAll(collection);\r\n    return items.filter(item => {\r\n      switch (operator) {\r\n        case '==':\r\n          return item[field] === value;\r\n        case '!=':\r\n          return item[field] !== value;\r\n        case '>':\r\n          return item[field] > value;\r\n        case '<':\r\n          return item[field] < value;\r\n        case '>=':\r\n          return item[field] >= value;\r\n        case '<=':\r\n          return item[field] <= value;\r\n        case 'array-contains':\r\n          return Array.isArray(item[field]) && item[field].includes(value);\r\n        default:\r\n          return false;\r\n      }\r\n    });\r\n  }\r\n\r\n  // File storage simulation\r\n  uploadFile(file) {\r\n    return new Promise((resolve) => {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const fileData = {\r\n          id: this.generateId(),\r\n          name: file.name,\r\n          type: file.type,\r\n          size: file.size,\r\n          data: e.target.result, // Base64 data\r\n          uploadedAt: new Date().toISOString()\r\n        };\r\n        \r\n        // Store file data\r\n        const files = JSON.parse(localStorage.getItem('files') || '[]');\r\n        files.push(fileData);\r\n        localStorage.setItem('files', JSON.stringify(files));\r\n        \r\n        resolve({\r\n          id: fileData.id,\r\n          name: fileData.name,\r\n          url: `data:${file.type};base64,${e.target.result.split(',')[1]}`,\r\n          type: file.type,\r\n          size: file.size,\r\n          uploadedAt: fileData.uploadedAt\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    });\r\n  }\r\n\r\n  // Authentication simulation\r\n  getCurrentUser() {\r\n    const userData = localStorage.getItem('currentUser');\r\n    return userData ? JSON.parse(userData) : null;\r\n  }\r\n\r\n  setCurrentUser(user) {\r\n    localStorage.setItem('currentUser', JSON.stringify(user));\r\n  }\r\n\r\n  clearCurrentUser() {\r\n    localStorage.removeItem('currentUser');\r\n  }\r\n\r\n  // Password hashing simulation (NOT secure - for demo only)\r\n  hashPassword(password) {\r\n    // Simple hash for demo - use proper hashing in production\r\n    return btoa(password);\r\n  }\r\n\r\n  verifyPassword(password, hash) {\r\n    return btoa(password) === hash;\r\n  }\r\n}\r\n\r\nexport const db = new LocalStorageDB();\r\nexport default db;"],"mappings":"AAAA;AACA;;AAEA,MAAMA,cAAc,CAAC;EACnBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,IAAI,CAAC,CAAC;EACb;EAEAA,IAAIA,CAAA,EAAG;IACL;IACA,IAAI,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;MAClC,MAAMC,SAAS,GAAG,CAChB;QACEC,EAAE,EAAE,SAAS;QACbC,GAAG,EAAE,SAAS;QACdC,KAAK,EAAE,yBAAyB;QAChCC,WAAW,EAAE,YAAY;QACzBC,IAAI,EAAE,OAAO;QACbC,MAAM,EAAE,IAAI;QACZC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QACnCC,SAAS,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC,EACD;QACER,EAAE,EAAE,QAAQ;QACZC,GAAG,EAAE,QAAQ;QACbC,KAAK,EAAE,oBAAoB;QAC3BC,WAAW,EAAE,aAAa;QAC1BC,IAAI,EAAE,MAAM;QACZC,MAAM,EAAE,IAAI;QACZC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QACnCC,SAAS,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC,CACF;MACDX,YAAY,CAACa,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACb,SAAS,CAAC,CAAC;IAC1D;IAEA,IAAI,CAACF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,EAAE;MACrCD,YAAY,CAACa,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAAC,EAAE,CAAC,CAAC;IACtD;IAEA,IAAI,CAACf,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,EAAE;MACnCD,YAAY,CAACa,OAAO,CAAC,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAAC,EAAE,CAAC,CAAC;IACpD;IAEA,IAAI,CAACf,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,EAAE;MAC1CD,YAAY,CAACa,OAAO,CAAC,eAAe,EAAEC,IAAI,CAACC,SAAS,CAAC,EAAE,CAAC,CAAC;IAC3D;EACF;;EAEA;EACAC,UAAUA,CAAA,EAAG;IACX,OAAO,KAAK,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;EACzD;;EAEA;EACAC,MAAMA,CAACC,UAAU,EAAEC,IAAI,EAAE;IACvB,MAAMC,KAAK,GAAG,IAAI,CAACC,MAAM,CAACH,UAAU,CAAC;IACrC,MAAMI,OAAO,GAAG;MACdvB,EAAE,EAAE,IAAI,CAACa,UAAU,CAAC,CAAC;MACrB,GAAGO,IAAI;MACPd,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACnCC,SAAS,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACpC,CAAC;IACDa,KAAK,CAACG,IAAI,CAACD,OAAO,CAAC;IACnB1B,YAAY,CAACa,OAAO,CAACS,UAAU,EAAER,IAAI,CAACC,SAAS,CAACS,KAAK,CAAC,CAAC;IACvD,OAAOE,OAAO;EAChB;EAEAD,MAAMA,CAACH,UAAU,EAAE;IACjB,MAAMC,IAAI,GAAGvB,YAAY,CAACC,OAAO,CAACqB,UAAU,CAAC;IAC7C,OAAOC,IAAI,GAAGT,IAAI,CAACc,KAAK,CAACL,IAAI,CAAC,GAAG,EAAE;EACrC;EAEAM,OAAOA,CAACP,UAAU,EAAEnB,EAAE,EAAE;IACtB,MAAMqB,KAAK,GAAG,IAAI,CAACC,MAAM,CAACH,UAAU,CAAC;IACrC,OAAOE,KAAK,CAACM,IAAI,CAACC,IAAI,IAAIA,IAAI,CAAC5B,EAAE,KAAKA,EAAE,CAAC;EAC3C;EAEA6B,MAAMA,CAACV,UAAU,EAAEnB,EAAE,EAAEoB,IAAI,EAAE;IAC3B,MAAMC,KAAK,GAAG,IAAI,CAACC,MAAM,CAACH,UAAU,CAAC;IACrC,MAAMW,KAAK,GAAGT,KAAK,CAACU,SAAS,CAACH,IAAI,IAAIA,IAAI,CAAC5B,EAAE,KAAKA,EAAE,CAAC;IACrD,IAAI8B,KAAK,KAAK,CAAC,CAAC,EAAE;MAChBT,KAAK,CAACS,KAAK,CAAC,GAAG;QACb,GAAGT,KAAK,CAACS,KAAK,CAAC;QACf,GAAGV,IAAI;QACPX,SAAS,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC;MACDX,YAAY,CAACa,OAAO,CAACS,UAAU,EAAER,IAAI,CAACC,SAAS,CAACS,KAAK,CAAC,CAAC;MACvD,OAAOA,KAAK,CAACS,KAAK,CAAC;IACrB;IACA,OAAO,IAAI;EACb;EAEAE,MAAMA,CAACb,UAAU,EAAEnB,EAAE,EAAE;IACrB,MAAMqB,KAAK,GAAG,IAAI,CAACC,MAAM,CAACH,UAAU,CAAC;IACrC,MAAMc,aAAa,GAAGZ,KAAK,CAACa,MAAM,CAACN,IAAI,IAAIA,IAAI,CAAC5B,EAAE,KAAKA,EAAE,CAAC;IAC1DH,YAAY,CAACa,OAAO,CAACS,UAAU,EAAER,IAAI,CAACC,SAAS,CAACqB,aAAa,CAAC,CAAC;IAC/D,OAAO,IAAI;EACb;;EAEA;EACAE,KAAKA,CAAChB,UAAU,EAAEiB,KAAK,EAAEC,QAAQ,EAAEC,KAAK,EAAE;IACxC,MAAMjB,KAAK,GAAG,IAAI,CAACC,MAAM,CAACH,UAAU,CAAC;IACrC,OAAOE,KAAK,CAACa,MAAM,CAACN,IAAI,IAAI;MAC1B,QAAQS,QAAQ;QACd,KAAK,IAAI;UACP,OAAOT,IAAI,CAACQ,KAAK,CAAC,KAAKE,KAAK;QAC9B,KAAK,IAAI;UACP,OAAOV,IAAI,CAACQ,KAAK,CAAC,KAAKE,KAAK;QAC9B,KAAK,GAAG;UACN,OAAOV,IAAI,CAACQ,KAAK,CAAC,GAAGE,KAAK;QAC5B,KAAK,GAAG;UACN,OAAOV,IAAI,CAACQ,KAAK,CAAC,GAAGE,KAAK;QAC5B,KAAK,IAAI;UACP,OAAOV,IAAI,CAACQ,KAAK,CAAC,IAAIE,KAAK;QAC7B,KAAK,IAAI;UACP,OAAOV,IAAI,CAACQ,KAAK,CAAC,IAAIE,KAAK;QAC7B,KAAK,gBAAgB;UACnB,OAAOC,KAAK,CAACC,OAAO,CAACZ,IAAI,CAACQ,KAAK,CAAC,CAAC,IAAIR,IAAI,CAACQ,KAAK,CAAC,CAACK,QAAQ,CAACH,KAAK,CAAC;QAClE;UACE,OAAO,KAAK;MAChB;IACF,CAAC,CAAC;EACJ;;EAEA;EACAI,UAAUA,CAACC,IAAI,EAAE;IACf,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;MAC9B,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK;QACrB,MAAMC,QAAQ,GAAG;UACflD,EAAE,EAAE,IAAI,CAACa,UAAU,CAAC,CAAC;UACrBsC,IAAI,EAAER,IAAI,CAACQ,IAAI;UACfC,IAAI,EAAET,IAAI,CAACS,IAAI;UACfC,IAAI,EAAEV,IAAI,CAACU,IAAI;UACfjC,IAAI,EAAE6B,CAAC,CAACK,MAAM,CAACC,MAAM;UAAE;UACvBC,UAAU,EAAE,IAAIjD,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;QACrC,CAAC;;QAED;QACA,MAAMiD,KAAK,GAAG9C,IAAI,CAACc,KAAK,CAAC5B,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;QAC/D2D,KAAK,CAACjC,IAAI,CAAC0B,QAAQ,CAAC;QACpBrD,YAAY,CAACa,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAAC6C,KAAK,CAAC,CAAC;QAEpDZ,OAAO,CAAC;UACN7C,EAAE,EAAEkD,QAAQ,CAAClD,EAAE;UACfmD,IAAI,EAAED,QAAQ,CAACC,IAAI;UACnBO,GAAG,EAAE,QAAQf,IAAI,CAACS,IAAI,WAAWH,CAAC,CAACK,MAAM,CAACC,MAAM,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;UAChEP,IAAI,EAAET,IAAI,CAACS,IAAI;UACfC,IAAI,EAAEV,IAAI,CAACU,IAAI;UACfG,UAAU,EAAEN,QAAQ,CAACM;QACvB,CAAC,CAAC;MACJ,CAAC;MACDV,MAAM,CAACc,aAAa,CAACjB,IAAI,CAAC;IAC5B,CAAC,CAAC;EACJ;;EAEA;EACAkB,cAAcA,CAAA,EAAG;IACf,MAAMC,QAAQ,GAAGjE,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACpD,OAAOgE,QAAQ,GAAGnD,IAAI,CAACc,KAAK,CAACqC,QAAQ,CAAC,GAAG,IAAI;EAC/C;EAEAC,cAAcA,CAACC,IAAI,EAAE;IACnBnE,YAAY,CAACa,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACoD,IAAI,CAAC,CAAC;EAC3D;EAEAC,gBAAgBA,CAAA,EAAG;IACjBpE,YAAY,CAACqE,UAAU,CAAC,aAAa,CAAC;EACxC;;EAEA;EACAC,YAAYA,CAACC,QAAQ,EAAE;IACrB;IACA,OAAOC,IAAI,CAACD,QAAQ,CAAC;EACvB;EAEAE,cAAcA,CAACF,QAAQ,EAAEG,IAAI,EAAE;IAC7B,OAAOF,IAAI,CAACD,QAAQ,CAAC,KAAKG,IAAI;EAChC;AACF;AAEA,OAAO,MAAMC,EAAE,GAAG,IAAI9E,cAAc,CAAC,CAAC;AACtC,eAAe8E,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}